Módulo 2: Desenvolvimento para Persistência usando Bancos Relacionais com Java JDBC + Padrão de Projeto DAO + Spring
JDBC Template + Spring Boot com Injeção de Dependências.

Crie uma aplicação que use um banco relacional com as mesmas funcionalidades da Lista 06, que usava DAO e JDBC Puro.

A nova aplicação deve usar o JDBC Template do Spring + Spring Boot com Injeção de Dependências, ou seja, baseado no
projeto exemplo-dao-jdbc-spring-com-injecao, que está publicado no Módulo 2 do GitHub da Disciplina.

O projeto acima mencionado tem um README.md explicando como criar a tabela no PostgreSQL ou SQLite. Tem também um banco
SQLite (contatos.db) povoado com alguns dados. Ele está no caminho a seguir do projeto: src/main/resources/contatos.db

Publiquei os 2 vídeos a seguir explicando cada um dos projetos de DAO com Spring (exemplo-dao-jdbc-spring-sem-injecao e
exemplo-dao-jdbc-spring-com-injecao). Neles explico possíveis problemas e soluções, além de mostrar como alternar entre
as diferentes implementações de DAO (List, JDBC Puro, Spring JDBC Template) e também de banco de dados (SQLite e
PostgreSQL). Mostro também como criar cada banco de dados do zero. Seguem os vídeos...